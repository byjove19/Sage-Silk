<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= pageTitle %></title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
    <style>
        :root {
            --sage-primary: #9ca986;
            --sage-dark: #6b7460;
            --sage-light: #a8b894;
            --sage-muted: #8b9474;
            --silk-cream: #f5f3f0;
            --silk-warm: #e8e4df;
            --silk-beige: #d4c5b0;
            --text-dark: #4a5240;
            --text-light: #7a8268;
            --text-muted: #9ca3ab;
            --success: #8b9474;
            --error: #c7856b;
            --warning: #d4a574;
            --box-shadow: 0 10px 40px rgba(107, 116, 96, 0.12);
            --box-shadow-hover: 0 20px 60px rgba(107, 116, 96, 0.18);
            --gradient-primary: linear-gradient(135deg, var(--sage-primary) 0%, var(--sage-light) 100%);
            --gradient-background: linear-gradient(135deg, #f5f3f0 0%, #e8e4df 50%, #f9f7f4 100%);
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Georgia', serif;
            background: var(--gradient-background);
            min-height: 100vh;
            color: var(--text-dark);
            line-height: 1.6;
            position: relative;
        }

        body::before {
            content: '';
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background-image: 
                radial-gradient(circle at 15% 25%, rgba(156, 169, 134, 0.08) 0%, transparent 50%),
                radial-gradient(circle at 85% 75%, rgba(212, 197, 176, 0.08) 0%, transparent 50%),
                radial-gradient(circle at 50% 50%, rgba(168, 184, 148, 0.04) 0%, transparent 50%);
            pointer-events: none;
            z-index: -1;
        }

        .container {
            max-width: 900px;
            margin: 0 auto;
            padding: 40px 20px;
        }

        .page-header {
            text-align: center;
            margin-bottom: 50px;
            position: relative;
        }

        .page-title {
            font-size: 3rem;
            font-weight: 300;
            color: var(--sage-dark);
            margin-bottom: 15px;
            letter-spacing: 2px;
            position: relative;
            display: inline-block;
        }

        .page-title::after {
            content: '';
            position: absolute;
            bottom: -10px;
            left: 50%;
            transform: translateX(-50%);
            width: 80px;
            height: 3px;
            background: var(--gradient-primary);
            border-radius: 2px;
        }

        .page-subtitle {
            font-size: 1.1rem;
            color: var(--text-light);
            font-weight: 300;
            margin-top: 20px;
        }

        .form-container {
            background: rgba(255, 255, 255, 0.9);
            backdrop-filter: blur(15px);
            border-radius: 24px;
            padding: 50px;
            box-shadow: var(--box-shadow);
            border: 1px solid rgba(156, 169, 134, 0.15);
            position: relative;
            overflow: hidden;
            transition: all 0.3s ease;
            animation: slideUp 0.8s ease-out;
        }

        @keyframes slideUp {
            from {
                opacity: 0;
                transform: translateY(30px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        .form-container::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            height: 6px;
            background: var(--gradient-primary);
        }

        .form-container:hover {
            box-shadow: var(--box-shadow-hover);
            transform: translateY(-2px);
        }

        .form-grid {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 30px;
            margin-bottom: 30px;
        }

        .form-grid.single {
            grid-template-columns: 1fr;
        }

        .form-group {
            position: relative;
            margin-bottom: 30px;
        }

        .form-label {
            display: block;
            font-weight: 600;
            color: var(--text-dark);
            margin-bottom: 12px;
            font-size: 0.95rem;
            text-transform: uppercase;
            letter-spacing: 0.8px;
            transition: color 0.3s ease;
        }

        .form-control {
            width: 100%;
            padding: 18px 24px;
            border: 2px solid rgba(156, 169, 134, 0.2);
            border-radius: 16px;
            font-size: 1rem;
            font-family: inherit;
            background: rgba(245, 243, 240, 0.4);
            color: var(--text-dark);
            transition: all 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275);
            backdrop-filter: blur(10px);
            box-shadow: inset 0 2px 8px rgba(156, 169, 134, 0.08);
        }

        .form-control::placeholder {
            color: var(--text-muted);
            font-style: italic;
        }

        .form-control:focus {
            outline: none;
            border-color: var(--sage-primary);
            background: rgba(255, 255, 255, 0.9);
            box-shadow: 
                inset 0 2px 8px rgba(156, 169, 134, 0.08),
                0 0 0 4px rgba(156, 169, 134, 0.15),
                0 8px 25px rgba(156, 169, 134, 0.2);
            transform: translateY(-2px);
        }

        .form-control:focus + .form-label,
        .form-group:focus-within .form-label {
            color: var(--sage-primary);
        }

        textarea.form-control {
            resize: vertical;
            min-height: 120px;
        }

        select.form-control {
            cursor: pointer;
            background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3e%3cpath stroke='%236b7460' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='M6 8l4 4 4-4'/%3e%3c/svg%3e");
            background-position: right 20px center;
            background-repeat: no-repeat;
            background-size: 16px;
            appearance: none;
            padding-right: 50px;
        }

        .file-input-wrapper {
            position: relative;
            display: inline-block;
            width: 100%;
        }

        .file-input {
            opacity: 0;
            position: absolute;
            z-index: -1;
        }

        .file-input-label {
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 15px;
            padding: 25px;
            border: 3px dashed rgba(156, 169, 134, 0.4);
            border-radius: 16px;
            background: rgba(245, 243, 240, 0.4);
            cursor: pointer;
            transition: all 0.3s ease;
            text-align: center;
            font-weight: 500;
            color: var(--text-light);
            backdrop-filter: blur(10px);
        }

        .file-input-label:hover {
            border-color: var(--sage-primary);
            background: rgba(156, 169, 134, 0.1);
            color: var(--sage-dark);
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(156, 169, 134, 0.15);
        }

        .file-input:focus + .file-input-label {
            border-color: var(--sage-primary);
            box-shadow: 0 0 0 4px rgba(156, 169, 134, 0.15);
        }

        .file-preview {
            display: none;
            margin-top: 15px;
            padding: 15px;
            background: rgba(139, 148, 116, 0.1);
            border-radius: 12px;
            border-left: 4px solid var(--success);
        }

        .file-preview.show {
            display: block;
            animation: fadeIn 0.3s ease;
        }

        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(10px); }
            to { opacity: 1; transform: translateY(0); }
        }

        .checkbox-wrapper {
            display: flex;
            align-items: center;
            gap: 15px;
            padding: 20px;
            background: rgba(245, 243, 240, 0.4);
            border-radius: 16px;
            border: 2px solid rgba(156, 169, 134, 0.15);
            transition: all 0.3s ease;
            backdrop-filter: blur(10px);
        }

        .checkbox-wrapper:hover {
            background: rgba(156, 169, 134, 0.08);
            border-color: rgba(156, 169, 134, 0.3);
        }

        .checkbox-custom {
            width: 24px;
            height: 24px;
            border: 2px solid var(--sage-primary);
            border-radius: 8px;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            transition: all 0.3s ease;
            background: rgba(245, 243, 240, 0.8);
            position: relative;
        }

        .checkbox-input {
            opacity: 0;
            position: absolute;
        }

        .checkbox-input:checked + .checkbox-custom {
            background: var(--sage-primary);
            border-color: var(--sage-primary);
            transform: scale(1.1);
        }

        .checkbox-custom::after {
            content: '\f00c';
            font-family: 'Font Awesome 6 Free';
            font-weight: 900;
            color: white;
            font-size: 14px;
            opacity: 0;
            transform: scale(0);
            transition: all 0.2s ease;
        }

        .checkbox-input:checked + .checkbox-custom::after {
            opacity: 1;
            transform: scale(1);
        }

        .checkbox-label {
            font-size: 1rem;
            font-weight: 500;
            color: var(--text-dark);
            cursor: pointer;
            user-select: none;
        }

        .featured-badge {
            display: inline-flex;
            align-items: center;
            gap: 8px;
            background: linear-gradient(135deg, var(--warning), #e6c579);
            color: white;
            padding: 6px 12px;
            border-radius: 20px;
            font-size: 0.85rem;
            font-weight: 600;
            text-shadow: 0 1px 2px rgba(0,0,0,0.1);
        }

        .btn-container {
            display: flex;
            gap: 20px;
            justify-content: center;
            margin-top: 40px;
            padding-top: 30px;
            border-top: 2px solid rgba(156, 169, 134, 0.1);
        }

        .btn {
            padding: 18px 40px;
            border: none;
            border-radius: 16px;
            font-size: 1.1rem;
            font-weight: 600;
            font-family: inherit;
            cursor: pointer;
            transition: all 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275);
            text-transform: uppercase;
            letter-spacing: 1px;
            position: relative;
            overflow: hidden;
            display: inline-flex;
            align-items: center;
            gap: 12px;
        }

        .btn::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(255,255,255,0.3), transparent);
            transition: left 0.6s ease;
        }

        .btn:hover::before {
            left: 100%;
        }

        .btn-primary {
            background: var(--gradient-primary);
            color: white;
            box-shadow: 0 8px 25px rgba(156, 169, 134, 0.3);
        }

        .btn-primary:hover {
            transform: translateY(-3px);
            box-shadow: 0 15px 40px rgba(156, 169, 134, 0.4);
        }

        .btn-secondary {
            background: transparent;
            color: var(--sage-dark);
            border: 2px solid var(--sage-primary);
        }

        .btn-secondary:hover {
            background: var(--sage-primary);
            color: white;
            transform: translateY(-3px);
            box-shadow: 0 15px 40px rgba(156, 169, 134, 0.3);
        }

        .btn:active {
            transform: translateY(-1px);
        }

        .btn .spinner {
            display: none;
            width: 20px;
            height: 20px;
            border: 2px solid rgba(255, 255, 255, 0.3);
            border-top: 2px solid white;
            border-radius: 50%;
            animation: spin 1s linear infinite;
        }

        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        .btn.loading .spinner {
            display: inline-block;
        }

        .btn.loading .btn-text {
            opacity: 0.8;
        }

        .form-hint {
            font-size: 0.85rem;
            color: var(--text-muted);
            margin-top: 8px;
            font-style: italic;
        }

        .required-indicator {
            color: var(--error);
            margin-left: 4px;
        }

        /* Responsive Design */
        @media (max-width: 768px) {
            .container {
                padding: 20px 15px;
            }

            .page-title {
                font-size: 2.2rem;
            }

            .form-container {
                padding: 30px 25px;
            }

            .form-grid {
                grid-template-columns: 1fr;
                gap: 20px;
            }

            .btn-container {
                flex-direction: column;
                align-items: center;
            }

            .btn {
                width: 100%;
                max-width: 300px;
                justify-content: center;
            }
        }

        @media (max-width: 480px) {
            .page-title {
                font-size: 1.8rem;
                letter-spacing: 1px;
            }

            .form-container {
                padding: 25px 20px;
            }

            .form-control {
                padding: 16px 20px;
            }
        }

        /* Success Animation */
        .success-animation {
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            background: rgba(139, 148, 116, 0.95);
            color: white;
            padding: 30px;
            border-radius: 20px;
            backdrop-filter: blur(15px);
            box-shadow: 0 20px 60px rgba(0,0,0,0.3);
            z-index: 1000;
            display: none;
            text-align: center;
        }

        .success-animation.show {
            display: block;
            animation: successPulse 0.6s ease-out;
        }

        @keyframes successPulse {
            0% {
                opacity: 0;
                transform: translate(-50%, -50%) scale(0.8);
            }
            100% {
                opacity: 1;
                transform: translate(-50%, -50%) scale(1);
            }
        }

        .character-count {
            text-align: right;
            font-size: 0.8rem;
            color: var(--text-muted);
            margin-top: 5px;
        }

        .character-count.warning {
            color: var(--warning);
        }

        .character-count.danger {
            color: var(--error);
        }
    </style>
</head>
<body>
    <%- include('../partials/header') %>

    <div class="container">
        <div class="page-header">
            <h1 class="page-title">Add New Product</h1>
            <p class="page-subtitle">Create a beautiful product listing for your Sage & Silk collection</p>
        </div>

        <div class="form-container">
            <form action="/admin/products" method="POST" enctype="multipart/form-data" id="productForm">
                <div class="form-grid">
                    <div class="form-group">
                        <label class="form-label" for="name">
                            Product Name <span class="required-indicator">*</span>
                        </label>
                        <input 
                            type="text" 
                            class="form-control" 
                            id="name" 
                            name="name" 
                            placeholder="Enter product name"
                            required
                            maxlength="100"
                        >
                        <div class="character-count" id="nameCount">0/100</div>
                    </div>
                    
                    <div class="form-group">
                        <label class="form-label" for="price">
                            Price <span class="required-indicator">*</span>
                        </label>
                        <input 
                            type="number" 
                            step="0.01" 
                            class="form-control" 
                            id="price" 
                            name="price" 
                            placeholder="0.00"
                            required
                            min="0"
                        >
                        <div class="form-hint">Enter price in your local currency</div>
                    </div>
                </div>

                <div class="form-grid single">
                    <div class="form-group">
                        <label class="form-label" for="description">
                            Description <span class="required-indicator">*</span>
                        </label>
                        <textarea 
                            class="form-control" 
                            id="description" 
                            name="description" 
                            rows="4" 
                            placeholder="Describe your product in detail..."
                            required
                            maxlength="500"
                        ></textarea>
                        <div class="character-count" id="descCount">0/500</div>
                    </div>
                </div>

                <div class="form-grid">
                    <div class="form-group">
                        <label class="form-label" for="category">
                            Category <span class="required-indicator">*</span>
                        </label>
                        <select class="form-control" id="category" name="category" required>
                            <option value="">Select a category</option>
                            <% categories.forEach(category => { %>
                                <option value="<%= category %>"><%= category %></option>
                            <% }) %>
                        </select>
                    </div>
                    
                    <div class="form-group">
                        <label class="form-label" for="subcategory">
                            Subcategory <span class="required-indicator">*</span>
                        </label>
                        <input 
                            type="text" 
                            class="form-control" 
                            id="subcategory" 
                            name="subcategory" 
                            placeholder="Enter subcategory"
                            required
                        >
                    </div>
                </div>

                <div class="form-grid">
                    <div class="form-group">
                        <label class="form-label" for="stock">
                            Stock Quantity <span class="required-indicator">*</span>
                        </label>
                        <input 
                            type="number" 
                            class="form-control" 
                            id="stock" 
                            name="stock" 
                            placeholder="0"
                            required
                            min="0"
                        >
                        <div class="form-hint">Current available inventory</div>
                    </div>
                    
                    <div class="form-group">
                        <label class="form-label">Product Status</label>
                        <div class="checkbox-wrapper">
                            <input type="checkbox" id="featured" name="featured" class="checkbox-input">
                            <div class="checkbox-custom"></div>
                            <label class="checkbox-label" for="featured">
                                Featured Product
                                <span class="featured-badge">
                                    <i class="fas fa-star"></i>
                                    Premium
                                </span>
                            </label>
                        </div>
                        <div class="form-hint">Featured products appear prominently on your store</div>
                    </div>
                </div>

                <div class="form-grid single">
                    <div class="form-group">
                        <label class="form-label" for="images">
                            Product Images <span class="required-indicator">*</span>
                        </label>
                        <div class="file-input-wrapper">
                            <input 
                                type="file" 
                                class="file-input" 
                                id="images" 
                                name="images" 
                                multiple 
                                accept="image/*"
                                required
                            >
                            <label for="images" class="file-input-label">
                                <i class="fas fa-cloud-upload-alt" style="font-size: 2rem; color: var(--sage-primary);"></i>
                                <div>
                                    <div style="font-size: 1.1rem; font-weight: 600; margin-bottom: 5px;">
                                        Choose Images or Drag & Drop
                                    </div>
                                    <div style="font-size: 0.9rem; opacity: 0.8;">
                                        Upload multiple high-quality product images
                                    </div>
                                </div>
                            </label>
                        </div>
                        <div class="file-preview" id="filePreview">
                            <i class="fas fa-check-circle" style="color: var(--success); margin-right: 8px;"></i>
                            <span id="fileCount">0 files selected</span>
                        </div>
                        <div class="form-hint">Supported formats: JPG, PNG, WEBP. Maximum 10 images.</div>
                    </div>
                </div>

                <div class="btn-container">
                    <button type="button" class="btn btn-secondary" onclick="resetForm()">
                        <i class="fas fa-undo"></i>
                        <span>Reset Form</span>
                    </button>
                    <button type="submit" class="btn btn-primary" id="submitBtn">
                        <div class="spinner"></div>
                        <span class="btn-text">
                            <i class="fas fa-plus"></i>
                            <span>Add Product</span>
                        </span>
                    </button>
                </div>
            </form>
        </div>
    </div>

    <div class="success-animation" id="successAnimation">
        <i class="fas fa-check-circle" style="font-size: 3rem; margin-bottom: 15px;"></i>
        <h3>Product Added Successfully!</h3>
        <p>Your new product has been added to the collection.</p>
    </div>

    <%- include('../partials/footer') %>

    <script>
        // Character counting for text inputs
        function setupCharacterCount(inputId, countId, maxLength) {
            const input = document.getElementById(inputId);
            const counter = document.getElementById(countId);
            
            input.addEventListener('input', function() {
                const currentLength = this.value.length;
                counter.textContent = `${currentLength}/${maxLength}`;
                
                if (currentLength > maxLength * 0.9) {
                    counter.classList.add('warning');
                } else {
                    counter.classList.remove('warning');
                }
                
                if (currentLength === maxLength) {
                    counter.classList.add('danger');
                } else {
                    counter.classList.remove('danger');
                }
            });
        }

        // Initialize character counters
        setupCharacterCount('name', 'nameCount', 100);
        setupCharacterCount('description', 'descCount', 500);

        // File input handling
        document.getElementById('images').addEventListener('change', function() {
            const filePreview = document.getElementById('filePreview');
            const fileCount = document.getElementById('fileCount');
            const files = this.files;
            
            if (files.length > 0) {
                filePreview.classList.add('show');
                fileCount.textContent = `${files.length} file${files.length > 1 ? 's' : ''} selected`;
                
                // Update label style
                const label = document.querySelector('.file-input-label');
                label.style.background = 'rgba(139, 148, 116, 0.1)';
                label.style.borderColor = 'var(--success)';
                label.style.color = 'var(--success)';
            } else {
                filePreview.classList.remove('show');
            }
        });

        // Drag and drop functionality
        const fileLabel = document.querySelector('.file-input-label');
        
        ['dragenter', 'dragover', 'dragleave', 'drop'].forEach(eventName => {
            fileLabel.addEventListener(eventName, preventDefaults, false);
        });

        function preventDefaults(e) {
            e.preventDefault();
            e.stopPropagation();
        }

        ['dragenter', 'dragover'].forEach(eventName => {
            fileLabel.addEventListener(eventName, highlight, false);
        });

        ['dragleave', 'drop'].forEach(eventName => {
            fileLabel.addEventListener(eventName, unhighlight, false);
        });

        function highlight(e) {
            fileLabel.style.background = 'rgba(156, 169, 134, 0.15)';
            fileLabel.style.borderColor = 'var(--sage-primary)';
            fileLabel.style.transform = 'scale(1.02)';
        }

        function unhighlight(e) {
            fileLabel.style.background = 'rgba(245, 243, 240, 0.4)';
            fileLabel.style.borderColor = 'rgba(156, 169, 134, 0.4)';
            fileLabel.style.transform = 'scale(1)';
        }

        fileLabel.addEventListener('drop', handleDrop, false);

        function handleDrop(e) {
            const dt = e.dataTransfer;
            const files = dt.files;
            document.getElementById('images').files = files;
            
            // Trigger change event
            const event = new Event('change', { bubbles: true });
            document.getElementById('images').dispatchEvent(event);
        }

        // Form submission
        document.getElementById('productForm').addEventListener('submit', function(e) {
            e.preventDefault(); // Prevent default for demo
            
            const submitBtn = document.getElementById('submitBtn');
            const btnText = submitBtn.querySelector('.btn-text span');
            
            submitBtn.classList.add('loading');
            submitBtn.disabled = true;
            btnText.textContent = 'Adding Product...';
            
            // Demo: Show success after 2 seconds
            setTimeout(() => {
                document.getElementById('successAnimation').classList.add('show');
                
                setTimeout(() => {
                    document.getElementById('successAnimation').classList.remove('show');
                    submitBtn.classList.remove('loading');
                    submitBtn.disabled = false;
                    btnText.textContent = 'Add Product';
                    
                    // Reset form
                    resetForm();
                }, 2000);
            }, 2000);
        });

        // Reset form function
        function resetForm() {
            document.getElementById('productForm').reset();
            document.getElementById('filePreview').classList.remove('show');
            document.getElementById('nameCount').textContent = '0/100';
            document.getElementById('descCount').textContent = '0/500';
            
            // Reset file input styling
            const label = document.querySelector('.file-input-label');
            label.style.background = 'rgba(245, 243, 240, 0.4)';
            label.style.borderColor = 'rgba(156, 169, 134, 0.4)';
            label.style.color = 'var(--text-light)';
        }

        // Enhanced form validation
        document.addEventListener('DOMContentLoaded', function() {
            const form = document.getElementById('productForm');
            const inputs = form.querySelectorAll('input[required], select[required], textarea[required]');
            
            inputs.forEach(input => {
                const formGroup = input.closest('.form-group');
                const label = formGroup.querySelector('.form-label');
                
                input.addEventListener('focus', function() {
                    formGroup.style.transform = 'scale(1.01)';
                    label.style.color =