<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Sage & Silk | Join the Family</title>
    <link href="https://fonts.googleapis.com/css2?family=Playfair+Display:wght@300;400;500;700;900&family=Inter:wght@200;300;400;500;600;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
       <!-- Favicon -->
    <link rel="shortcut icon" href="assets/images/favicon.png" />
    
    <style>
        :root {
            --primary-gold: #d4af37;
            --primary-gold-light: #e8c547;
            --primary-gold-dark: #b8941f;
            --sage-green: #87a96b;
            --sage-green-light: #a3c085;
            --sage-green-dark: #6b8a4f;
            --cream: #f8f6f0;
            --charcoal: #2c2c2c;
            --warm-white: #fefcf7;
            --glass-white: rgba(255, 255, 255, 0.12);
            --glass-border: rgba(255, 255, 255, 0.18);
            --error-red: #ff6b6b;
            --success-green: #51cf66;
            --shadow-glow: 0 20px 60px rgba(0, 0, 0, 0.3);
            --shadow-intense: 0 30px 80px rgba(0, 0, 0, 0.4);
            --border-radius: 20px;
            --transition: all 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275);
            --transition-smooth: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Inter', sans-serif;
            background-image: url('/assets/images/signup.jpg');
            background-size: cover;
            background-position: center;
            background-attachment: fixed;
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: flex-end;
            padding: 0 120px 0 40px;
            position: relative;
            overflow-x: hidden;
        }

        /* Animated overlay with dynamic gradient */
        body::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: 
                radial-gradient(circle at 20% 80%, rgba(135, 169, 107, 0.3) 0%, transparent 50%),
                radial-gradient(circle at 80% 20%, rgba(212, 175, 55, 0.2) 0%, transparent 50%),
                linear-gradient(135deg, rgba(44, 44, 44, 0.1) 0%, rgba(44, 44, 44, 0.6) 100%);
            animation: gradientShift 8s ease-in-out infinite;
            pointer-events: none;
        }

        /* Floating particles effect */
        body::after {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: url('data:image/svg+xml,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 200 200"><defs><radialGradient id="particle1"><stop offset="0%" stop-color="%23ffffff" stop-opacity="0.8"/><stop offset="100%" stop-color="%23ffffff" stop-opacity="0"/></radialGradient></defs><circle cx="30" cy="50" r="1" fill="url(%23particle1)"><animate attributeName="cy" values="50;30;50" dur="5s" repeatCount="indefinite"/></circle><circle cx="90" cy="90" r="1.5" fill="url(%23particle1)"><animate attributeName="cy" values="90;70;90" dur="7s" repeatCount="indefinite"/></circle><circle cx="150" cy="130" r="0.8" fill="url(%23particle1)"><animate attributeName="cy" values="130;110;130" dur="6s" repeatCount="indefinite"/></circle></svg>');
            opacity: 0.6;
            animation: float 20s linear infinite;
            pointer-events: none;
        }

        .container {
            width: 100%;
            max-width: 520px;
            position: relative;
            z-index: 10;
        }

        .brand-section {
            text-align: right;
            margin-bottom: 2.5rem;
            animation: slideInRight 1s ease-out;
            transform-origin: right center;
        }

        .brand-section h1 {
            font-family: 'Playfair Display', serif;
            font-size: 3.2rem;
            font-weight: 300;
            color: var(--warm-white);
            text-shadow: 
                0 0 20px rgba(255, 255, 255, 0.3),
                2px 2px 4px rgba(0, 0, 0, 0.5);
            margin-bottom: 0.8rem;
            letter-spacing: 2px;
            line-height: 1.1;
        }

        .brand-section .tagline {
            color: var(--cream);
            font-size: 1rem;
            font-weight: 300;
            opacity: 0.95;
            text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.3);
            letter-spacing: 1px;
            margin-bottom: 0.3rem;
        }

        .brand-section .sub-tagline {
            color: rgba(248, 246, 240, 0.8);
            font-size: 0.85rem;
            font-weight: 200;
            font-style: italic;
            text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.3);
        }

        /* Ultra-modern glassmorphism form */
        .form-container {
            background: linear-gradient(135deg, 
                rgba(255, 255, 255, 0.25) 0%,
                rgba(255, 255, 255, 0.18) 50%,
                rgba(255, 255, 255, 0.12) 100%);
            backdrop-filter: blur(25px);
            -webkit-backdrop-filter: blur(25px);
            border-radius: var(--border-radius);
            border: 2px solid rgba(255, 255, 255, 0.2);
            box-shadow: 
                var(--shadow-glow),
                inset 0 1px 0 rgba(255, 255, 255, 0.3),
                0 0 0 1px rgba(255, 255, 255, 0.1);
            padding: 2.5rem;
            position: relative;
            overflow: hidden;
            animation: glassAppear 1.2s ease-out 0.3s both;
            transform-origin: right center;
        }

        /* Dynamic glass reflection effect */
        .form-container::before {
            content: '';
            position: absolute;
            top: -50%;
            left: -50%;
            width: 200%;
            height: 200%;
            background: linear-gradient(45deg, 
                transparent 40%, 
                rgba(255, 255, 255, 0.1) 50%, 
                transparent 60%);
            animation: shimmer 3s ease-in-out infinite;
            pointer-events: none;
        }

        .form-header {
            text-align: center;
            margin-bottom: 2rem;
            position: relative;
            z-index: 2;
        }

        .form-header h2 {
            font-family: 'Playfair Display', serif;
            font-size: 2rem;
            color: var(--charcoal);
            margin-bottom: 0.6rem;
            font-weight: 400;
            text-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }

        .form-header p {
            color: rgba(44, 44, 44, 0.8);
            font-size: 0.95rem;
            font-weight: 400;
            opacity: 0.9;
        }

        .form-group {
            margin-bottom: 1.5rem;
            position: relative;
            z-index: 2;
        }

        .form-group label {
            display: block;
            color: var(--charcoal);
            font-weight: 600;
            margin-bottom: 0.6rem;
            font-size: 0.9rem;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }

        .input-wrapper {
            position: relative;
        }

        /* Futuristic input styling */
        .form-input {
            width: 100%;
            padding: 1rem 1.2rem;
            border: 2px solid rgba(255, 255, 255, 0.3);
            border-radius: 15px;
            font-size: 0.95rem;
            color: var(--charcoal);
            background: rgba(255, 255, 255, 0.9);
            backdrop-filter: blur(10px);
            transition: var(--transition);
            outline: none;
            font-weight: 500;
            box-shadow: 
                0 4px 20px rgba(0, 0, 0, 0.05),
                inset 0 1px 0 rgba(255, 255, 255, 0.8);
        }

        .form-input:focus {
            border-color: var(--primary-gold);
            background: rgba(255, 255, 255, 0.95);
            box-shadow: 
                0 0 0 4px rgba(212, 175, 55, 0.2),
                0 8px 30px rgba(212, 175, 55, 0.15),
                inset 0 1px 0 rgba(255, 255, 255, 1);
            transform: translateY(-2px);
        }

        .form-input.error {
            border-color: var(--error-red);
            box-shadow: 
                0 0 0 4px rgba(255, 107, 107, 0.2),
                0 8px 30px rgba(255, 107, 107, 0.15);
            animation: shake 0.5s ease-in-out;
        }

        .password-wrapper {
            position: relative;
        }

        .password-toggle {
            position: absolute;
            right: 1rem;
            top: 50%;
            transform: translateY(-50%);
            background: rgba(212, 175, 55, 0.1);
            border: none;
            color: var(--primary-gold);
            cursor: pointer;
            font-size: 1rem;
            transition: var(--transition-smooth);
            padding: 0.4rem;
            border-radius: 50%;
            width: 32px;
            height: 32px;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .password-toggle:hover {
            background: rgba(212, 175, 55, 0.2);
            transform: translateY(-50%) scale(1.1);
        }

        .show-password-container {
            display: flex;
            align-items: center;
            gap: 0.6rem;
            margin-top: 0.8rem;
            padding: 0.3rem;
        }

        .show-password-container input[type="checkbox"] {
            width: 16px;
            height: 16px;
            accent-color: var(--primary-gold);
            cursor: pointer;
        }

        .show-password-container label {
            font-size: 0.85rem;
            color: rgba(44, 44, 44, 0.8);
            cursor: pointer;
            margin: 0;
            font-weight: 400;
            text-transform: none;
            letter-spacing: normal;
        }

        .error-message {
            color: var(--error-red);
            font-size: 0.85rem;
            margin-top: 0.6rem;
            display: none;
            align-items: center;
            gap: 0.4rem;
            font-weight: 500;
            padding: 0.4rem;
            background: rgba(255, 107, 107, 0.1);
            border-radius: 8px;
            border-left: 3px solid var(--error-red);
        }

        .error-message.show {
            display: flex;
            animation: slideDown 0.3s ease-out;
        }

        /* Premium button with gradient and effects */
        .btn-primary {
            width: 100%;
            padding: 1.2rem;
            background: linear-gradient(135deg, 
                var(--primary-gold) 0%, 
                var(--primary-gold-light) 50%,
                var(--primary-gold-dark) 100%);
            color: white;
            border: none;
            border-radius: 15px;
            font-size: 1rem;
            font-weight: 700;
            cursor: pointer;
            transition: var(--transition);
            position: relative;
            overflow: hidden;
            margin: 1.5rem 0;
            text-transform: uppercase;
            letter-spacing: 1px;
            box-shadow: 
                0 8px 25px rgba(212, 175, 55, 0.4),
                inset 0 1px 0 rgba(255, 255, 255, 0.3);
            z-index: 2;
        }

        .btn-primary::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, 
                transparent, 
                rgba(255, 255, 255, 0.3), 
                transparent);
            transition: left 0.5s ease;
        }

        .btn-primary:hover {
            transform: translateY(-3px);
            box-shadow: 
                0 12px 35px rgba(212, 175, 55, 0.5),
                0 0 0 3px rgba(212, 175, 55, 0.2),
                inset 0 1px 0 rgba(255, 255, 255, 0.4);
        }

        .btn-primary:hover::before {
            left: 100%;
        }

        .btn-primary:active {
            transform: translateY(-1px);
        }

        .btn-primary:disabled {
            opacity: 0.7;
            cursor: not-allowed;
            transform: none;
        }

        .divider {
            text-align: center;
            margin: 2rem 0 1.5rem;
            position: relative;
            color: rgba(44, 44, 44, 0.6);
            font-size: 0.9rem;
            font-weight: 500;
            z-index: 2;
        }

        .divider::before {
            content: '';
            position: absolute;
            top: 50%;
            left: 0;
            right: 0;
            height: 2px;
            background: linear-gradient(90deg, 
                transparent, 
                rgba(255, 255, 255, 0.4) 20%,
                rgba(255, 255, 255, 0.4) 80%,
                transparent);
        }

        .divider span {
            background: rgba(255, 255, 255, 0.9);
            backdrop-filter: blur(10px);
            padding: 0 1.2rem;
            position: relative;
            border-radius: 20px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        }

        .social-login {
            display: flex;
            flex-direction: column;
            gap: 0.8rem;
            z-index: 2;
            position: relative;
        }

        .social-btn {
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 0.8rem;
            padding: 1rem 1.2rem;
            border: 2px solid rgba(255, 255, 255, 0.3);
            border-radius: 15px;
            color: var(--charcoal);
            text-decoration: none;
            font-weight: 600;
            transition: var(--transition);
            background: rgba(255, 255, 255, 0.8);
            backdrop-filter: blur(10px);
            box-shadow: 
                0 4px 15px rgba(0, 0, 0, 0.05),
                inset 0 1px 0 rgba(255, 255, 255, 0.8);
            font-size: 0.9rem;
        }

        .social-btn:hover {
            border-color: rgba(255, 255, 255, 0.6);
            background: rgba(255, 255, 255, 0.9);
            transform: translateY(-2px);
            box-shadow: 
                0 8px 25px rgba(0, 0, 0, 0.1),
                inset 0 1px 0 rgba(255, 255, 255, 1);
        }

        .social-btn.google:hover {
            border-color: #db4437;
            color: #db4437;
            box-shadow: 
                0 8px 25px rgba(219, 68, 55, 0.2),
                inset 0 1px 0 rgba(255, 255, 255, 1);
        }

        .social-btn.microsoft:hover {
            border-color: #0078d4;
            color: #0078d4;
            box-shadow: 
                0 8px 25px rgba(0, 120, 212, 0.2),
                inset 0 1px 0 rgba(255, 255, 255, 1);
        }

        .alt-action {
            text-align: center;
            margin-top: 2rem;
            padding-top: 1.5rem;
            border-top: 1px solid rgba(255, 255, 255, 0.3);
            z-index: 2;
            position: relative;
        }

        .alt-action p {
            color: rgba(44, 44, 44, 0.8);
            font-weight: 500;
            font-size: 0.9rem;
        }

        .alt-action a {
            color: var(--primary-gold);
            text-decoration: none;
            font-weight: 700;
            transition: var(--transition-smooth);
            position: relative;
        }

        .alt-action a::after {
            content: '';
            position: absolute;
            bottom: -2px;
            left: 0;
            width: 0;
            height: 2px;
            background: linear-gradient(90deg, var(--primary-gold), var(--primary-gold-light));
            transition: width 0.3s ease;
        }

        .alt-action a:hover::after {
            width: 100%;
        }

        /* Flash Messages with enhanced styling */
        .flash-message {
            padding: 1rem 1.2rem;
            border-radius: 15px;
            margin-bottom: 1.5rem;
            font-weight: 600;
            display: none;
            align-items: center;
            gap: 0.6rem;
            backdrop-filter: blur(10px);
            border: 1px solid;
            position: relative;
            z-index: 2;
            font-size: 0.9rem;
        }

        .flash-message.error {
            background: rgba(255, 107, 107, 0.15);
            color: #721c24;
            border-color: rgba(255, 107, 107, 0.3);
            display: flex;
            animation: slideIn 0.5s ease-out;
        }

        .flash-message.success {
            background: rgba(81, 207, 102, 0.15);
            color: #155724;
            border-color: rgba(81, 207, 102, 0.3);
            display: flex;
            animation: slideIn 0.5s ease-out;
        }

        .loading {
            display: inline-block;
            width: 16px;
            height: 16px;
            border: 3px solid rgba(255, 255, 255, 0.3);
            border-radius: 50%;
            border-top: 3px solid #ffffff;
            animation: spin 1s linear infinite;
            margin-left: 0.6rem;
        }

        /* Form row for side-by-side inputs */
        .form-row {
            display: flex;
            gap: 1rem;
            margin-bottom: 1.5rem;
        }

        .form-row .form-group {
            flex: 1;
            margin-bottom: 0;
        }

        /* Animations */
        @keyframes gradientShift {
            0%, 100% { opacity: 0.8; }
            50% { opacity: 1; }
        }

        @keyframes float {
            0% { transform: translateY(0px) rotate(0deg); }
            50% { transform: translateY(-20px) rotate(180deg); }
            100% { transform: translateY(0px) rotate(360deg); }
        }

        @keyframes slideInRight {
            from {
                opacity: 0;
                transform: translateX(50px);
            }
            to {
                opacity: 1;
                transform: translateX(0);
            }
        }

        @keyframes glassAppear {
            from {
                opacity: 0;
                transform: translateX(30px) scale(0.95);
            }
            to {
                opacity: 1;
                transform: translateX(0) scale(1);
            }
        }

        @keyframes shimmer {
            0% { transform: translateX(-100%) translateY(-100%); }
            50% { transform: translateX(-50%) translateY(-50%); }
            100% { transform: translateX(0%) translateY(0%); }
        }

        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        @keyframes shake {
            0%, 100% { transform: translateX(0); }
            25% { transform: translateX(-5px); }
            75% { transform: translateX(5px); }
        }

        @keyframes slideDown {
            from {
                opacity: 0;
                transform: translateY(-10px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        @keyframes slideIn {
            from {
                opacity: 0;
                transform: translateY(-20px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        /* Responsive Design */
        @media (max-width: 1024px) {
            body {
                justify-content: center;
                padding: 40px 20px;
            }
            
            .brand-section {
                text-align: center;
            }
        }

        @media (max-width: 768px) {
            body {
                padding: 20px;
                background-attachment: scroll;
            }

            .brand-section h1 {
                font-size: 2.5rem;
            }

            .form-container {
                padding: 2rem;
            }

            .form-header h2 {
                font-size: 1.7rem;
            }

            .form-row {
                flex-direction: column;
                gap: 0;
            }

            .form-row .form-group {
                margin-bottom: 1.5rem;
            }
        }

        @media (max-width: 480px) {
            .brand-section h1 {
                font-size: 2rem;
            }

            .brand-section .tagline {
                font-size: 0.9rem;
            }

            .form-container {
                padding: 1.5rem;
            }

            .form-header h2 {
                font-size: 1.5rem;
            }
        }
        
    </style>
</head>
<body>
    <div class="container">
        <!-- Enhanced Brand Section -->
        <div class="brand-section">
            <h1>Sage & Silk</h1>
            <div class="tagline">Curated Fashion • Timeless Elegance</div>
            <div class="sub-tagline">Where style meets sophistication</div>
        </div>

        <!-- Ultra-Modern Signup Form Container -->
        <div class="form-container">
            <div class="form-header">
                <h2>Join the Sage & Silk Family</h2>
                <p>Experience fashion like never before</p>
            </div>

            <!-- Enhanced Error Messages -->
            <% if (typeof errors !== 'undefined' && errors && errors.length > 0) { %>
                <div class="flash-message error">
                    <i class="fas fa-exclamation-triangle"></i>
                    <div>
                        <% errors.forEach(error => { %>
                            <div><%= error %></div>
                        <% }) %>
                    </div>
                </div>
            <% } %>
            
            <% if (typeof messages !== 'undefined' && messages.success) { %>
                <div class="flash-message success">
                    <i class="fas fa-check-circle"></i>
                    <%= messages.success %>
                </div>
            <% } %>

            <!-- Premium Signup Form -->
            <form action="/signup" method="POST" autocomplete="on" id="signupForm">
                <div class="form-row">
                    <div class="form-group">
                        <label for="username">Username</label>
                        <div class="input-wrapper">
                            <input 
                                type="text" 
                                id="username"
                                name="username" 
                                class="form-input"
                                placeholder="Choose a username"
                                required 
                                autocomplete="username"
                                value="<%= typeof formData !== 'undefined' && formData ? formData.username || '' : '' %>">
                            <div class="error-message" id="usernameError">
                                <i class="fas fa-exclamation-triangle"></i>
                                <span></span>
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        <label for="email">Email Address</label>
                        <div class="input-wrapper">
                            <input 
                                type="email" 
                                id="email"
                                name="email" 
                                class="form-input"
                                placeholder="Enter your email"
                                required 
                                autocomplete="email"
                                value="<%= typeof formData !== 'undefined' && formData ? formData.email || '' : '' %>">
                            <div class="error-message" id="emailError">
                                <i class="fas fa-exclamation-triangle"></i>
                                <span></span>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <label for="password">Password</label>
                    <div class="input-wrapper">
                        <div class="password-wrapper">
                            <input 
                                type="password" 
                                id="password"
                                name="password" 
                                class="form-input"
                                placeholder="Create a secure password"
                                required 
                                autocomplete="new-password">
                            <button type="button" class="password-toggle" onclick="togglePasswordVisibility()">
                                <i class="fas fa-eye" id="passwordToggleIcon"></i>
                            </button>
                        </div>
                        <div class="show-password-container">
                            <input type="checkbox" id="showPassword" onchange="togglePasswordVisibility()">
                            <label for="showPassword">Show password</label>
                        </div>
                        <div class="error-message" id="passwordError">
                            <i class="fas fa-exclamation-triangle"></i>
                            <span></span>
                        </div>
                    </div>
                </div>

                <button type="submit" class="btn-primary" id="submitBtn">
                    Create Account
                    <span class="loading" id="loadingSpinner" style="display: none;"></span>
                </button>
            </form>

            <!-- Enhanced Divider -->
            <div class="divider">
                <span>or continue with</span>
            </div>

            <!-- Premium Social Login -->
            <div class="social-login">
                <a href="/auth/google" class="social-btn google">
                    <i class="fab fa-google"></i>
                    Signup with Google
                </a>
                <a href="/auth/microsoft" class="social-btn microsoft">
                    <i class="fab fa-microsoft"></i>
                    Signup with Microsoft
                </a>
            </div>

            <!-- Enhanced Alternative Actions -->
            <div class="alt-action">
                <p>Already have an account? <a href="/login">Sign in here</a></p>
            </div>
        </div>
    </div>

    <script>
     // Enhanced password visibility toggle with smooth animations
        function togglePasswordVisibility() {
            const passwordInput = document.getElementById('password');
            const passwordToggleIcon = document.getElementById('passwordToggleIcon');
            const showPasswordCheckbox = document.getElementById('showPassword');
            
            if (passwordInput.type === 'password') {
                passwordInput.type = 'text';
                passwordToggleIcon.className = 'fas fa-eye-slash';
                showPasswordCheckbox.checked = true;
            } else {
                passwordInput.type = 'password';
                passwordToggleIcon.className = 'fas fa-eye';
                showPasswordCheckbox.checked = false;
            }
        }

        // Enhanced form validation and submission
        document.getElementById('signupForm').addEventListener('submit', function(e) {
            const submitBtn = document.getElementById('submitBtn');
            const loadingSpinner = document.getElementById('loadingSpinner');
            
            // Show loading state with enhanced animation
            submitBtn.disabled = true;
            loadingSpinner.style.display = 'inline-block';
            submitBtn.innerHTML = 'Creating Account <span class="loading" style="display: inline-block;"></span>';
            
            // Reset previous errors
            clearAllErrors();
            
            // Validate form
            if (!validateForm()) {
                e.preventDefault();
                submitBtn.disabled = false;
                loadingSpinner.style.display = 'none';
                submitBtn.innerHTML = 'Create Account';
                return;
            }
        });

        // Advanced form validation
        function validateForm() {
            let isValid = true;
            
            // Username validation
            const username = document.getElementById('username').value.trim();
            if (username.length < 3) {
                showError('username', 'Username must be at least 3 characters long');
                isValid = false;
            } else if (!/^[a-zA-Z0-9_]+$/.test(username)) {
                showError('username', 'Username can only contain letters, numbers, and underscores');
                isValid = false;
            }
            
            // Email validation
            const email = document.getElementById('email').value.trim();
            const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
            if (!emailRegex.test(email)) {
                showError('email', 'Please enter a valid email address');
                isValid = false;
            }
            
            // Password validation
            const password = document.getElementById('password').value;
            if (password.length < 8) {
                showError('password', 'Password must be at least 8 characters long');
                isValid = false;
            } else if (!/(?=.*[a-z])(?=.*[A-Z])(?=.*\d)/.test(password)) {
                showError('password', 'Password must contain at least one uppercase letter, one lowercase letter, and one number');
                isValid = false;
            }
            
            return isValid;
        }

        // Show error message with animation
        function showError(fieldName, message) {
            const input = document.getElementById(fieldName);
            const errorDiv = document.getElementById(fieldName + 'Error');
            const errorSpan = errorDiv.querySelector('span');
            
            input.classList.add('error');
            errorSpan.textContent = message;
            errorDiv.classList.add('show');
            
            // Remove error on input focus
            input.addEventListener('focus', function() {
                clearError(fieldName);
            }, { once: true });
        }

        // Clear specific error
        function clearError(fieldName) {
            const input = document.getElementById(fieldName);
            const errorDiv = document.getElementById(fieldName + 'Error');
            
            input.classList.remove('error');
            errorDiv.classList.remove('show');
        }

        // Clear all errors
        function clearAllErrors() {
            const errorMessages = document.querySelectorAll('.error-message');
            const inputFields = document.querySelectorAll('.form-input');
            
            errorMessages.forEach(error => error.classList.remove('show'));
            inputFields.forEach(input => input.classList.remove('error'));
        }

        // Real-time validation on input
        document.getElementById('username').addEventListener('input', function() {
            const value = this.value.trim();
            if (value.length >= 3 && /^[a-zA-Z0-9_]+$/.test(value)) {
                clearError('username');
            }
        });

        document.getElementById('email').addEventListener('input', function() {
            const value = this.value.trim();
            const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
            if (emailRegex.test(value)) {
                clearError('email');
            }
        });

        document.getElementById('password').addEventListener('input', function() {
            const value = this.value;
            if (value.length >= 8 && /(?=.*[a-z])(?=.*[A-Z])(?=.*\d)/.test(value)) {
                clearError('password');
            }
        });

        // Auto-hide flash messages after 5 seconds
        document.addEventListener('DOMContentLoaded', function() {
            const flashMessages = document.querySelectorAll('.flash-message');
            flashMessages.forEach(message => {
                setTimeout(() => {
                    message.style.opacity = '0';
                    message.style.transform = 'translateY(-20px)';
                    setTimeout(() => {
                        message.style.display = 'none';
                    }, 300);
                }, 5000);
            });
        });

        // Enhanced form interactions
        document.querySelectorAll('.form-input').forEach(input => {
            // Add focus/blur animations
            input.addEventListener('focus', function() {
                this.parentElement.classList.add('focused');
            });
            
            input.addEventListener('blur', function() {
                this.parentElement.classList.remove('focused');
            });
        });

        // Social login button animations
        document.querySelectorAll('.social-btn').forEach(btn => {
            btn.addEventListener('click', function(e) {
                // Add click ripple effect
                const ripple = document.createElement('div');
                ripple.style.position = 'absolute';
                ripple.style.borderRadius = '50%';
                ripple.style.background = 'rgba(255, 255, 255, 0.3)';
                ripple.style.transform = 'scale(0)';
                ripple.style.animation = 'ripple 0.6s linear';
                ripple.style.left = (e.clientX - btn.getBoundingClientRect().left) + 'px';
                ripple.style.top = (e.clientY - btn.getBoundingClientRect().top) + 'px';
                ripple.style.width = ripple.style.height = '20px';
                
                this.style.position = 'relative';
                this.style.overflow = 'hidden';
                this.appendChild(ripple);
                
                setTimeout(() => {
                    ripple.remove();
                }, 600);
            });
        });

        // Add ripple animation to CSS dynamically
        const style = document.createElement('style');
        style.textContent = `
            @keyframes ripple {
                to {
                    transform: scale(4);
                    opacity: 0;
                }
            }
        `;
        document.head.appendChild(style);

        // Keyboard navigation enhancement
        document.addEventListener('keydown', function(e) {
            if (e.key === 'Enter' && e.target.classList.contains('form-input')) {
                const inputs = Array.from(document.querySelectorAll('.form-input'));
                const currentIndex = inputs.indexOf(e.target);
                
                if (currentIndex < inputs.length - 1) {
                    inputs[currentIndex + 1].focus();
                } else {
                    document.getElementById('submitBtn').focus();
                }
            }
        });

        // Progressive form enhancement
        if ('IntersectionObserver' in window) {
            const observer = new IntersectionObserver((entries) => {
                entries.forEach(entry => {
                    if (entry.isIntersecting) {
                        entry.target.classList.add('animate-in');
                    }
                });
            }, { threshold: 0.1 });

            document.querySelectorAll('.form-group').forEach(group => {
                observer.observe(group);
            });
        }

        // Add animate-in class styles
        const animationStyle = document.createElement('style');
        animationStyle.textContent = `
            .form-group {
                opacity: 0;
                transform: translateY(20px);
                transition: all 0.6s ease-out;
            }
            .form-group.animate-in {
                opacity: 1;
                transform: translateY(0);
            }
        `;
        document.head.appendChild(animationStyle);
    </script>